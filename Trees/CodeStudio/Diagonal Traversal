/*
Question Link :- https://www.naukri.com/code360/problems/diagonal-traversal_920391
*/


#include <bits/stdc++.h> 
/*
    
    Following is the Binary Tree node structure for your referance:

    class TreeNode {
    public :
        int data;
        TreeNode *left;
        TreeNode *right;

        TreeNode(int data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        ~TreeNode() {
            if (left){
            delete left;
            }
            if (right){
            delete right;
            }
        }
    };

*/

void solve(TreeNode<int>* root, map<int, vector<int>>&nodes, int d) {
    if (root == NULL)
        return ;
    
    nodes[d].push_back(root -> data);

    solve(root -> left, nodes, d+1);
    solve(root -> right, nodes, d);
}


vector<vector<int>> diagonal(TreeNode<int>* root){
    vector<vector<int>>result;
    map<int, vector<int>>nodes;
    int d;

    solve(root, nodes, d);

    for (auto i : nodes) {
        vector<int>ans;
        for (auto j : i.second) {
            ans.push_back(j);
        }
        result.push_back(ans);
    }
    return result;
}
