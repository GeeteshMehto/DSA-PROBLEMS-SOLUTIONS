/*
Question Link :- https://www.naukri.com/code360/problems/bottom-view-of-binary-tree_893110
*/


#include <map>
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
vector<int> bottomView(TreeNode<int> * root){
    vector<int>ans;

    if(root == NULL)
        return ans;
    
    map<int, int>bottomNode;
    queue <pair<TreeNode<int>*, int>>q;
    q.push(make_pair(root, 0));

    while (!q.empty()) {
        pair<TreeNode<int>*, int>temp = q.front();
        q.pop();
        TreeNode<int>* frontNode = temp.first;
        int hdist = temp.second;

        bottomNode[hdist] = frontNode -> data;

        if (frontNode -> left)
            q.push(make_pair(frontNode -> left, hdist-1));
        
        if (frontNode -> right)
            q.push(make_pair(frontNode -> right, hdist+1));
    }

    for (auto i : bottomNode) {
        ans.push_back(i.second);
    }
    return ans;
}
