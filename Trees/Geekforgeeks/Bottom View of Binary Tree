
/*
Question Link :- https://www.geeksforgeeks.org/problems/bottom-view-of-binary-tree/
*/

class Solution {
  public:
    vector <int> bottomView(Node *root) {
        vector<int>ans;
        
        if(root == NULL)
            return ans;
        
        map<int, int>bottomNode;
        queue<pair<Node*, int>>q;
        q.push(make_pair(root, 0));
        
        while(!q.empty()) {
            pair<Node*, int>temp = q.front();
            q.pop();
            Node* frontNode = temp.first;
            int hdist = temp.second;
            
            bottomNode[hdist] = frontNode -> data;
            
            if (frontNode -> left)
                q.push(make_pair(frontNode -> left, hdist-1));

            if (frontNode -> right)
                q.push(make_pair(frontNode -> right, hdist+1));
        }
        
        for (auto i : bottomNode) {
            ans.push_back(i.second);
        }
        return ans;
    }
};
