/*
Question Link :- https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone/
*/


class Solution {
private:
    void sort(vector<int>&arr, int n) {
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;

            for (int j = i + 1; j < n; j++) {
                if (arr[j] > arr[minIndex]) {
                    minIndex = j;
                }
            }
            swap(arr[minIndex], arr[i]);
        }
    }

public:
    int minMovesToSeat(vector<int>& seats, vector<int>& students) {
        int ans = 0;

        sort(seats, seats.size());
        sort(students, students.size());

        for (int i = 0; i < seats.size(); ++i)
            ans += abs(seats[i] - students[i]);

        return ans;
    }
};
